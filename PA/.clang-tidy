---
# Configure clang-tidy for this project.

# This list is supposed to be frequently updated in the early stage of development.
# Some of the options are to be disabled later and the reason will be explained.
Checks: >
  -*,
  boost-*,
  bugprone-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-*,
  google-*,
  misc-*,
  modernize-*,
  mpi-*,
  openmp-*,
  performance-*,
  portability-*,
  readability-*,

  -bugprone-easily-swappable-parameters,
  -bugprone-unhandled-self-assignment,
  -cppcoreguidelines-avoid-do-while,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-special-member-functions,
  -cppcoreguidelines-owning-memory,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -misc-non-private-member-variables-in-classes,
  -modernize-use-trailing-return-type,
  -modernize-use-nodiscard,
  -google-readability-braces-around-statements,
  -readability-braces-around-statements,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-redundant-access-specifiers,
  -readability-identifier-naming,
  -performance-enum-size,
  -readability-math-missing-parentheses,
  -readability-named-parameter,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-const-or-ref-data-members,
  -cppcoreguidelines-use-default-member-init,
  -modernize-avoid-c-arrays,
  -modernize-use-default-member-init,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -misc-include-cleaner,

# Disable it for now, we might need more precise report on errors.
# WarningsAsErrors: "*"

# FunctionCase is set to aNy_CasE to make math function naming more robust.
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase, value: aNy_CasE }
  - { key: readability-identifier-naming.ClassCase, value: aNy_CasE }
  - { key: readability-identifier-naming.StructCase, value: aNy_CasE }
  - { key: readability-identifier-naming.EnumCase, value: aNy_CasE }
  - { key: readability-identifier-naming.FunctionCase, value: aNy_CasE }
  - { key: readability-identifier-naming.VariableCase, value: aNy_CasE }
  - { key: readability-identifier-naming.ClassMemberCase, value: aNy_CasE }
  # - { key: readability-identifier-naming.ClassMemberSuffix, value: _ }
  - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }

  # Extra options
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: 1 }
